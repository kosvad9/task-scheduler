jwt:
  secretKey: '{"kty":"oct","k":"i87sIKs6OSgSt_6tvcr8xQ"}'
db:
  schema: tasks
kafka:
  emailTopic: "email-messages-topic"
  requestTasksTopic: "request-task-reports-topic"
  taskReportsTopic: "task-reports-topic"
spring:
  kafka:
    bootstrap-servers: localhost:9094
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      retries: 100
      properties:
        enable:
          idempotence: true
    consumer:
      group-id: request-receiver
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring:
          deserializer:
            value:
              delegate:
                class: org.springframework.kafka.support.serializer.JsonDeserializer
          json:
            trusted:
              packages: com.kosvad9.core
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5433/postgres
    username: postgres
    password: masterkey
    hikari:
      schema: ${db.schema}
  liquibase:
    default-schema: ${db.schema}
    liquibase-schema: ${db.schema}
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
logging:
  file:
    name: log.log
    path: /
  level:
    root: info
#    org.springframework.security : trace