plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'io.freefair.lombok' version '8.6'
}

group = 'com.kosvad9'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation project("core")
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.liquibase:liquibase-core'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'com.nimbusds:nimbus-jose-jwt:9.37.3'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
}

gradle.taskGraph.whenReady { graph ->
	def hasRootRunTask = graph.hasTask(':bootJar')
	if (hasRootRunTask) {
		graph.getAllTasks().each { task ->
			def subRunTask = (task.path =~ /:(mail-sender-service|scheduler-service):.+/)
			if (subRunTask) {
				task.enabled = false
			}
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar{
	archiveFileName.set("${project.name}.jar")
}